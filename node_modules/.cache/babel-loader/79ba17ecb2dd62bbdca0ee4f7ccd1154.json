{"ast":null,"code":"var _jsxFileName = \"/Users/tangkailai/Desktop/cs_coursework/CS 639/react1-alpha-KailaiTang/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Sidebar from './Sidebar';\nimport CourseArea from './CourseArea';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCourses: {},\n      filteredCourses: {},\n      cartCourses: [],\n      subjects: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://mysqlcs639.cs.wisc.edu:53706/api/react/classes').then(res => res.json()).then(data => this.setState({\n      allCourses: data,\n      filteredCourses: data,\n      cartCourses: [],\n      subjects: this.getSubjects(data)\n    }));\n  }\n\n  getSubjects(data) {\n    let subjects = [];\n    subjects.push(\"All\");\n\n    for (const course of Object.values(data)) {\n      if (subjects.indexOf(course.subject) === -1) subjects.push(course.subject);\n    }\n\n    return subjects;\n  }\n\n  setCourses(courses) {\n    this.setState({\n      filteredCourses: courses\n    });\n  }\n\n  updateCourse(status, course, section, subsection) {\n    // add a course\n    if (status === \"add\" && section == null && subsection == null) {\n      this.addCourse(course);\n    } // remove a course\n    else if (status === \"remove\" && section == null && subsection == null) {\n        this.removeCourse(course);\n      } // add a section\n      else if (status === \"add\" && subsection == null) {\n          this.addSection(course, section);\n        } // remove a section\n        else if (status === \"remove\" && subsection == null) {\n            this.removeSection(course, section);\n          } // add a subsection\n          else if (status === \"add\") {\n              this.addSubsection(course, section, subsection);\n            } // remove a subsection\n            else if (status === \"remove\") {\n                this.removeSubsection(course, section, subsection);\n              }\n  }\n\n  addCourse(course) {\n    // course already exists\n    for (let i = 0; i < this.state.cartCourses.length; i++) {\n      if (this.state.cartCourses[i].number === course.number) {\n        this.state.cartCourses.splice(i, 1);\n      }\n    } // course not exist\n\n\n    this.state.cartCourses.push(course);\n    this.setState({\n      cartCourses: this.state.cartCourses\n    });\n  }\n\n  removeCourse(course) {\n    for (let i = 0; i < this.state.cartCourses.length; i++) {\n      if (this.state.cartCourses[i].number === course.number) {\n        this.state.cartCourses.splice(i, 1);\n        this.setState({\n          cartCourses: this.state.cartCourses\n        });\n        return;\n      }\n    }\n\n    this.setState({\n      cartCourses: this.state.cartCourses\n    });\n  }\n\n  addSection(course, section) {\n    // course already exists\n    for (let i = 0; i < this.state.cartCourses.length; i++) {\n      if (this.state.cartCourses[i].number === course.number) {\n        // section already exists\n        for (let j = 0; j < this.state.cartCourses[i].sections.length; j++) {\n          if (this.state.cartCourses[i].sections[j].number === section.number) {\n            this.state.cartCourses[i].sections.splice(j, 1);\n            break;\n          }\n        } // add the section\n\n\n        this.state.cartCourses[i].sections.push(section);\n        this.setState({\n          cartCourses: this.state.cartCourses\n        });\n        return;\n      }\n    } // course not exists\n\n\n    var new_course = JSON.parse(JSON.stringify(course));\n    new_course.sections = [];\n    new_course.sections.push(section);\n    this.state.cartCourses.push(new_course);\n    this.setState({\n      cartCourses: this.state.cartCourses\n    });\n  }\n\n  removeSection(course, section) {\n    for (let i = 0; i < this.state.cartCourses.length; i++) {\n      if (this.state.cartCourses[i].number === course.number) {\n        // remove the section if the section already exists\n        for (let j = 0; j < this.state.cartCourses[i].sections.length; j++) {\n          if (this.state.cartCourses[i].sections[j].number === section.number) {\n            this.state.cartCourses[i].sections.splice(j, 1); // if no section in a course, remove the course\n\n            if (this.state.cartCourses[i].sections.length == 0) {\n              this.removeCourse(course);\n            }\n\n            this.setState({\n              cartCourses: this.state.cartCourses\n            });\n            return;\n          }\n        }\n      }\n    }\n\n    this.setState({\n      cartCourses: this.state.cartCourses\n    });\n  }\n\n  addSubsection(course, section, subsection) {\n    // to check whether course exists\n    for (let i = 0; i < this.state.cartCourses.length; i++) {\n      if (this.state.cartCourses[i].number === course.number) {\n        // to check whether the section exists\n        for (let j = 0; j < this.state.cartCourses[i].sections.length; j++) {\n          if (this.state.cartCourses[i].sections[j].number == section.number) {\n            // to check whether the subsection exists\n            for (let k = 0; k < this.state.cartCourses[i].sections[j].subsections.length; k++) {\n              if (this.state.cartCourses[i].sections[j].subsections[k] == subsection.number) {\n                return;\n              }\n            } // if subsection does not exist, but section exists\n\n\n            this.state.cartCourses[i].sections[j].subsections.push(subsection);\n            this.setState({\n              cartCourses: this.state.cartCourses\n            });\n            return;\n          }\n        } // if section does not exist, but course exists\n\n\n        var new_section = JSON.parse(JSON.stringify(section));\n        new_section.subsections = [];\n        new_section.subsections.push(subsection);\n        this.state.cartCourses[i].sections.push(new_section);\n        this.setState({\n          cartCourses: this.state.cartCourses\n        });\n        return;\n      }\n    } // if course does not exist\n\n\n    var new_section = JSON.parse(JSON.stringify(section));\n    new_section.subsections = [];\n    new_section.subsections.push(subsection);\n    var new_course = JSON.parse(JSON.stringify(course));\n    new_course.sections = [];\n    new_course.sections.push(new_section);\n    this.state.cartCourses.push(new_course);\n    this.setState({\n      cartCourses: this.state.cartCourses\n    });\n  }\n\n  removeSubsection(course, section, subsection) {\n    // to check whether course exists\n    for (let i = 0; i < this.state.cartCourses.length; i++) {\n      if (this.state.cartCourses[i].number === course.number) {\n        // to check whether the section exists\n        for (let j = 0; j < this.state.cartCourses[i].sections.length; j++) {\n          if (this.state.cartCourses[i].sections[j].number == section.number) {\n            // to check whether the subsection exists\n            for (let k = 0; k < this.state.cartCourses[i].sections[j].subsections.length; k++) {\n              if (this.state.cartCourses[i].sections[j].subsections[k].number == subsection.number) {\n                this.state.cartCourses[i].sections[j].subsections.splice(k, 1); // if no subsection in a section, remove the course\n\n                if (this.state.cartCourses[i].sections[j].subsections.length == 0) {\n                  this.removeSection(course, section);\n                }\n\n                this.setState({\n                  cartCourses: this.state.cartCourses\n                });\n                return;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    this.setState({\n      cartCourses: this.state.cartCourses\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n      integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n      crossOrigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Tabs, {\n      defaultActiveKey: \"search\",\n      style: {\n        position: 'fixed',\n        zIndex: 1,\n        width: '100%',\n        backgroundColor: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"search\",\n      title: \"Search\",\n      style: {\n        paddingTop: '5vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      setCourses: courses => this.setCourses(courses),\n      courses: this.state.allCourses,\n      subjects: this.state.subjects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '20vw'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CourseArea, {\n      data: this.state.filteredCourses,\n      allData: this.state.allCourses,\n      cartCourses: this.state.cartCourses,\n      updateCourse: this.updateCourse.bind(this),\n      cartMode: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"cart\",\n      title: \"Cart\",\n      style: {\n        paddingTop: '5vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '5vw'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CourseArea, {\n      data: this.state.cartCourses,\n      allData: this.state.allCourses,\n      cartCourses: this.state.cartCourses,\n      updateCourse: this.updateCourse.bind(this),\n      cartMode: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tangkailai/Desktop/cs_coursework/CS 639/react1-alpha-KailaiTang/src/App.js"],"names":["React","Tabs","Tab","Sidebar","CourseArea","App","Component","constructor","props","state","allCourses","filteredCourses","cartCourses","subjects","componentDidMount","fetch","then","res","json","data","setState","getSubjects","push","course","Object","values","indexOf","subject","setCourses","courses","updateCourse","status","section","subsection","addCourse","removeCourse","addSection","removeSection","addSubsection","removeSubsection","i","length","number","splice","j","sections","new_course","JSON","parse","stringify","k","subsections","new_section","render","position","zIndex","width","backgroundColor","paddingTop","marginLeft","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport Sidebar from './Sidebar';\nimport CourseArea from './CourseArea';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCourses: {},\n      filteredCourses: {},\n      cartCourses: [],\n      subjects: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://mysqlcs639.cs.wisc.edu:53706/api/react/classes').then(\n      res => res.json()\n    ).then(data => this.setState({ allCourses: data, filteredCourses: data, cartCourses: [], subjects: this.getSubjects(data) }));\n  }\n\n  getSubjects(data) {\n    let subjects = [];\n    subjects.push(\"All\");\n    for (const course of Object.values(data)) {\n      if (subjects.indexOf(course.subject) === -1)\n        subjects.push(course.subject);\n    }\n    return subjects;\n  }\n\n  setCourses(courses) {\n    this.setState({ filteredCourses: courses })\n  }\n\n  updateCourse(status, course, section, subsection) {\n    // add a course\n    if (status === \"add\" && section == null && subsection == null) {\n      this.addCourse(course);\n    }\n    // remove a course\n    else if (status === \"remove\" && section == null && subsection == null) {\n      this.removeCourse(course);\n    }\n    // add a section\n    else if (status === \"add\" && subsection == null) {\n      this.addSection(course, section);\n    }\n    // remove a section\n    else if (status === \"remove\" && subsection == null) {\n      this.removeSection(course, section);\n    }\n    // add a subsection\n    else if (status === \"add\") {\n      this.addSubsection(course, section, subsection);\n    }\n    // remove a subsection\n    else if (status === \"remove\") {\n      this.removeSubsection(course, section, subsection);\n    }\n  }\n\n  addCourse(course) {\n    // course already exists\n    for (let i = 0; i < this.state.cartCourses.length; i++) {\n      if (this.state.cartCourses[i].number === course.number) {\n        this.state.cartCourses.splice(i, 1);\n      }\n    }\n    // course not exist\n    this.state.cartCourses.push(course);\n    this.setState({cartCourses:this.state.cartCourses});\n  }\n\n  removeCourse(course) {\n    for (let i = 0; i < this.state.cartCourses.length; i++) {\n      if (this.state.cartCourses[i].number === course.number) {\n        this.state.cartCourses.splice(i, 1);\n        this.setState({cartCourses:this.state.cartCourses});\n        return;\n      }\n    }\n    this.setState({cartCourses:this.state.cartCourses});\n  }\n\n  addSection(course, section) {\n    // course already exists\n    for (let i = 0; i < this.state.cartCourses.length; i++) {\n      if (this.state.cartCourses[i].number === course.number) {\n        // section already exists\n        for (let j = 0; j < this.state.cartCourses[i].sections.length; j++) {\n          if (this.state.cartCourses[i].sections[j].number === section.number) {\n            this.state.cartCourses[i].sections.splice(j, 1);\n            break;\n          }\n        }\n        // add the section\n        this.state.cartCourses[i].sections.push(section);\n        this.setState({cartCourses:this.state.cartCourses});\n        return;\n      }\n    }\n    // course not exists\n    var new_course = JSON.parse(JSON.stringify(course));\n    new_course.sections = [];\n    new_course.sections.push(section);\n    this.state.cartCourses.push(new_course);\n    this.setState({cartCourses:this.state.cartCourses});\n  }\n\n  removeSection(course, section) {\n    for (let i = 0; i < this.state.cartCourses.length; i++) {\n      if (this.state.cartCourses[i].number === course.number) {\n        // remove the section if the section already exists\n        for (let j = 0; j < this.state.cartCourses[i].sections.length; j++) {\n          if (this.state.cartCourses[i].sections[j].number === section.number) {\n            this.state.cartCourses[i].sections.splice(j, 1);\n            // if no section in a course, remove the course\n            if (this.state.cartCourses[i].sections.length == 0) {\n              this.removeCourse(course);\n            }\n            this.setState({cartCourses:this.state.cartCourses});\n            return;\n          }\n        }\n      }\n    }\n    this.setState({cartCourses:this.state.cartCourses});\n  }\n\n  addSubsection(course, section, subsection) {\n    // to check whether course exists\n    for (let i = 0; i < this.state.cartCourses.length; i++) {\n      if (this.state.cartCourses[i].number === course.number) {\n        // to check whether the section exists\n        for (let j = 0; j < this.state.cartCourses[i].sections.length; j++) {\n          if (this.state.cartCourses[i].sections[j].number == section.number) {\n            // to check whether the subsection exists\n            for (let k = 0; k < this.state.cartCourses[i].sections[j].subsections.length; k++) {\n              if (this.state.cartCourses[i].sections[j].subsections[k] == subsection.number) {\n                return;\n              }\n            }\n            // if subsection does not exist, but section exists\n            this.state.cartCourses[i].sections[j].subsections.push(subsection);\n            this.setState({cartCourses:this.state.cartCourses});\n            return;\n          }\n        }\n        // if section does not exist, but course exists\n        var new_section = JSON.parse(JSON.stringify(section));\n        new_section.subsections = [];\n        new_section.subsections.push(subsection);\n        this.state.cartCourses[i].sections.push(new_section);\n        this.setState({cartCourses:this.state.cartCourses});\n        return;\n      }\n    }\n    // if course does not exist\n    var new_section = JSON.parse(JSON.stringify(section));\n    new_section.subsections = [];\n    new_section.subsections.push(subsection);\n    var new_course = JSON.parse(JSON.stringify(course));\n    new_course.sections = [];\n    new_course.sections.push(new_section);\n    this.state.cartCourses.push(new_course);\n    this.setState({cartCourses:this.state.cartCourses});\n  }\n\n  removeSubsection(course, section, subsection) {\n    // to check whether course exists\n    for (let i = 0; i < this.state.cartCourses.length; i++) {\n      if (this.state.cartCourses[i].number === course.number) {\n        // to check whether the section exists\n        for (let j = 0; j < this.state.cartCourses[i].sections.length; j++) {\n          if (this.state.cartCourses[i].sections[j].number == section.number) {\n            // to check whether the subsection exists\n            for (let k = 0; k < this.state.cartCourses[i].sections[j].subsections.length; k++) {\n              if (this.state.cartCourses[i].sections[j].subsections[k].number == subsection.number) {\n                this.state.cartCourses[i].sections[j].subsections.splice(k, 1);\n                // if no subsection in a section, remove the course\n                if (this.state.cartCourses[i].sections[j].subsections.length == 0) {\n                  this.removeSection(course, section);\n                }\n                this.setState({cartCourses:this.state.cartCourses});\n                return;\n              }\n            }\n          }\n        }\n      }\n    }\n    this.setState({cartCourses:this.state.cartCourses});\n  }\n\n  render() {\n    return (\n      <>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n          crossOrigin=\"anonymous\"\n        />\n        <Tabs defaultActiveKey=\"search\" style={{ position: 'fixed', zIndex: 1, width: '100%', backgroundColor: 'white' }}>\n          <Tab eventKey=\"search\" title=\"Search\" style={{ paddingTop: '5vh' }}>\n            <Sidebar setCourses={(courses) => this.setCourses(courses)} courses={this.state.allCourses} subjects={this.state.subjects} />\n            <div style={{ marginLeft: '20vw' }}>\n              <CourseArea data={this.state.filteredCourses} allData={this.state.allCourses} cartCourses={this.state.cartCourses} updateCourse={this.updateCourse.bind(this)} cartMode={false} />\n            </div>\n          </Tab>\n\n          <Tab eventKey=\"cart\" title=\"Cart\" style={{ paddingTop: '5vh' }}>\n            <div style={{ marginLeft: '5vw' }}>\n              <CourseArea \n                data={this.state.cartCourses} \n                allData={this.state.allCourses} \n                cartCourses={this.state.cartCourses} \n                updateCourse={this.updateCourse.bind(this)} \n                cartMode={true} />\n            </div>\n          </Tab>\n        </Tabs>\n      </>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}