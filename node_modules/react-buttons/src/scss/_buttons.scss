@if $include-icon-btn == true {
  .icon-text-btn {

    .icon + span,
    span + .icon {
      margin-left: $icon-text-btn-margin;
    }

    .material-icons {
      vertical-align: middle;
    }
  }
}


@if $include-flat-btn == true {
  .flat-btn {
    position: relative;
    font-family: $flat-btn-font;
    padding: $flat-btn-padding;
    border: 0;

    &:active,
    &.active {
      top: $flat-btn-active-offset;
      outline: none;
      box-shadow: none;
    }

    @each $btn in $flat-btn-classes {
      @include flat-btn(nth($btn, 1), nth($btn, 2), nth($btn, 3), nth($btn, 4));
    }
  }
}

@if $include-icon-btn == true {
  .icon-btn {
    position: relative;
    border: none;
    background-color: transparent;
    padding: $icon-btn-padding;
    font-size: $icon-btn-font-size;

    &:focus:not(.tab-focus) {
      outline: none;
    }

    @if $include-floating-box == true and $include-help-text == true {
      > [class^='help-text'] {
        @extend .floating-box;

        font-family: $help-text-font;
        font-size: $help-text-font-size;
        white-space: pre;

        @include floating-box-color($help-text-background-color, $help-text-color);
      }

      @each $dir in top, right, bottom, left {
        > .help-text-#{$dir} {
          @extend .floating-box-#{$dir};
        }
      }
    }
  }
}





@if $include-hamburger-btn == true {
  .hamburger-btn {
    position: relative;
    padding: $icon-btn-padding;

    .bars-wrapper {
      position: relative;
    }

    .left-bars,
    .left-bars:before,
    .left-bars:after,
    .right-bars,
    .right-bars:before,
    .right-bars:after {
      content: '';
      position: absolute;

      background: $hamburger-btn-line-color;
      transition: transform $button-transition-time, background $button-transition-time;
    }

    .left-bars,
    .left-bars:before,
    .left-bars:after {
      left: 0;
    }

    .right-bars,
    .right-bars:before,
    .right-bars:after {
      right: 0;
    }

    @include hamburger-position();

    &.active {
      .left-bars, .right-bars {
        background: transparent;
      }
    }

    $btn-size: $icon-btn-font-size - $hamburger-btn-size-scale;
    $line-size: $hamburger-btn-line-height - $hamburger-btn-line-scale;
    @for $i from 1 through length($hamburger-btn-sizes) {
      $size: nth($hamburger-btn-sizes, $i);

      &.hamburger-btn-#{$size} {
        @include hamburger-size($btn-size, $line-size);
        @include hamburger-position($btn-size, $line-size);

      }

      $btn-size: $btn-size + $hamburger-btn-size-scale;
      $line-size: $line-size + $hamburger-btn-line-scale;
    }
  }
}



@if $include-floating-btn == true {
  .floating-btn {
    position: fixed;
    right: $floating-btn-right;
    bottom: $floating-btn-bottom;

    padding: 0;
    width: $floating-btn-size;
    height: $floating-btn-size;

    border-radius: $floating-btn-border-radius;
    font-size: $floating-btn-font-size;
    box-shadow: $floating-btn-box-shadow;

    @each $btn in $floating-btn-classes {
      &.floating-btn-#{nth($btn, 1)} {
        color: nth($btn, 2);
        background-color: nth($btn, 3);
      }
    }
  }
}


@if $include-ripple-btn == true {
  .ripple-btn {
    position: relative;
    z-index: 0;
    overflow: hidden;

    .ripple-effect {
      display: block;
      position: absolute;
      background: $ripple-effect-bg;
      border-radius: 100%;
      transform: scale(0);

      &.active {
        transition: opacity $ripple-effect-duration linear, transform $ripple-effect-duration linear;
        opacity: 0;
        transform: scale($ripple-effect-final-scale);
      }
    }
  }
}
